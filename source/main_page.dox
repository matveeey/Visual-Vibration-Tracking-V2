/*! \mainpage Оптический (визуальный) трекинг вибрации
 * \section modules_description Описание модулей
 * 
 * Программа глобально имеет 4 модуля (режима работы). Фактически они располагаются в порядке, который предполагается как наиболее логичный способ использования программы.
 * 
 * Каждый имеет модуль имеет общий интерфейс взаимодействия: \n
 * Выход из режима на клавишу 'Q'\n
 * Пауза на 'пробел'
 * 
 * \subsection calibration 1. Калибровка камеры
 * Перед началом работы с записанными видео с конкретной камеры необходимо выполнить её калибровку. Она выполняется один раз, после чего полученные в её процессе значения будут применены при удалении дисторсии.
 * \attention
 * У камеры могут быть несколько режимов съёмки (например, как у гоупро: широкоугольный, средний, узкий). Как правило, они реализованы программно.\n
 * При смене режима съёмки необходимо ещё раз выполнять калибровку, так как параметры дисторсии изменяются вместе с этим режимом. \n
 * Даже если линза камеры осталось той же (не поменяла своих параметров), сама картинка была программно растянута/сжата, а это в свою очередь 
 * внесло новые искажения.
 * 
 * \subsection undistortion 2. Удаление дисторсии
 * После нахождения коэффициентов в пункте 1. мы можем удалять дисторсию с видео, записанных на камеру, для которой мы нашли эти самые коэффициенты дисторсии. \n
 * Это нужно для снижения влияния оптических искажений на результат работы программы.
 * 
 * \subsection vibration_monitoring 3. Мониторинг вибрации
 * Основной режим работы приложения. Описание управления и пояснения представлены ниже.
 * 
 * \subsection movement_enlarging 4. Увеличение вибрации (визуальное)
 * Выполняется визуальное увеличение вибрации (маленьких и незаметных движений).
 * 
 * \section control_sect Управление в программе
 * 
 * \subsection default_mode Стандартный режим
 * В этом режиме можно добавить нажатием на ЛКМ точки, перемещение которых будет покадрово отслежено (с помощью алгоритма Лукаса-Канаде) и проанилизировано.
 * С помощью быстрого преобразования Фурье (на вход которого будет поданы координаты точек, а на выходе получены гармоники, составляющие входной сигнал) будут найдены частоты вибрации, которые 
 * есть у выбранной точки. Самая большая по магнитуде частота будет выведена справа от точки. На остальные пики можно посмотреть, нажав ПКМ в области взаимодействия точки
 * 
 * \subsection ROI_selecting_mode Режим выбора области интереса (ROI)
 * Этот режим предназначен для выделения (с помощью зажатой ЛКМ) области интереса - прямоугольника, в котором впоследствии будут найдены наиболее подходящие для трекинга точки
 * (см. детектор углов Харриса и cv::cornerMinEigenVal()) \n
 * После "отпускания" ПКМ режим будет автоматически изменён на Стандартный, после чего с найденными в области интереса точками будут производиться те же действия, что и с "одиночными" (описано выше), 
 * за исключением того, что вместо выведения максимальной магнитуды справа от точки в виде текста, эта максимальная магнитуда будет отображаться в виде цвета точки. \n
 * Для наглядности снизу появится градиентная шкала, чтобы можно было соотносить информацию о цвете с частотой в цифрах
 * 
 * \subsection default_mode Пауза
 * Этот режим ставит на паузу программу нажатием на 'пробел'
 * 
 * 
 * \section block_schemes_sect Блок-схемы основных алгоритмов
 * \subsection camera_calibration_block_scheme Блок-схема калибровки камеры
 * \image html camera_calibration_block_scheme.png
 * 
 * \subsection camera_distortion_scheme Блок-схема удаления дисторсии
 * \image html undistortion_block_scheme.png
 * 
 * \subsection main_alg_scheme Блок-схема основной части программы
 * Для лучшего понимания, мне кажется, стоит сначала ознакомиться с FrameHandler (класс, отвечающий за работу с видео), а также LonelyPointHandler и ColoredPointHandler
 * @see VibrationDetector VibrationDetector::ExecuteVibrationDetection() - то, по чему строилась блок-схема
 * @see VibrationDetector::TrackAndCalc() - то, где трекаются точки и вызывается метод БПФ
 * @see VibrationDetector::ServeTheQueues() - то, где "обслуживаются" очереди на удаление/добавление точек. Не знаю, на сколько правильно реализовывать это таким путём, но мне в голову пришла такая идея.\n
 * Вызывается она на каждом кадре после вычисления новых позиций, чтобы не нарушить работу TrackAndCalc().
 * \image html main_alg_block_scheme.png
 * 
 * \subsection movement_enlargement_scheme Блок-схема усиления движения
 * \image html movement_enlargement_scheme.jpg
 * 
 * 
 * 
 * 
 * 
 * 
 */